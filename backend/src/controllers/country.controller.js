import {
  findActiveCountries,
  findAllCountries,
  createCountry,
  updateCountryById,
  deleteCountryById
} from '../models/country.repository.js';

// üìå Liste publique des pays actifs
export const getActiveCountries = async (req, res) => {
  try {
    const countries = await findActiveCountries();
    res.json(countries);
  } catch (error) {
    res.status(500).json({ message: 'Erreur lors de la r√©cup√©ration des pays actifs', error: error.message });
  }
};

// üìå Liste compl√®te (admin)
export const getAllCountries = async (req, res) => {
  try {
    const countries = await findAllCountries();
    res.json(countries);
  } catch (error) {
    res.status(500).json({ message: 'Erreur lors de la r√©cup√©ration des pays', error: error.message });
  }
};

// üìå Cr√©ation d‚Äôun pays (admin)
export const addCountry = async (req, res) => {
  const { name, code, phone_prefix, currency_id } = req.body;
  try {
    const newCountry = await createCountry(name, code, phone_prefix, currency_id);
    res.status(201).json({ message: 'Pays ajout√© avec succ√®s', country: newCountry });
  } catch (error) {
    res.status(500).json({ message: 'Erreur lors de l‚Äôajout du pays', error: error.message });
  }
};

// üìå Mise √† jour d‚Äôun pays (admin)
export const updateCountry = async (req, res) => {
  const { id } = req.params;
  const { name, code, phone_prefix, currency_id, is_active } = req.body;
  try {
    const updatedCountry = await updateCountryById(id, name, code, phone_prefix, currency_id, is_active);
    if (!updatedCountry) {
      return res.status(404).json({ message: 'Pays non trouv√©' });
    }
    res.json({ message: 'Pays mis √† jour avec succ√®s', country: updatedCountry });
  } catch (error) {
    res.status(500).json({ message: 'Erreur lors de la mise √† jour du pays', error: error.message });
  }
};

// üìå Suppression d‚Äôun pays (admin)
export const deleteCountry = async (req, res) => {
  const { id } = req.params;
  try {
    const deletedCountry = await deleteCountryById(id);
    if (!deletedCountry) {
      return res.status(404).json({ message: 'Pays non trouv√©' });
    }
    res.json({ message: 'Pays supprim√© avec succ√®s' });
  } catch (error) {
    res.status(500).json({ message: 'Erreur lors de la suppression du pays', error: error.message });
  }
};
